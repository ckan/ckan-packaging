---
- hosts: all
  vars_prompt:
   - name: version
     prompt: "CKAN Version"
     private: True
   - name: iteration
     prompt: "Iteration"
     private: True
   - name: datapusher
     prompt: "Enable DataPusher? [Y/n]"
     default: "y"
     private: True
  tasks:
    - name: make sure packages are installed
      action: apt pkg={{ item }} state=installed update_cache=yes
      with_items:
        - git-core
        - python-dev
        - postgresql
        - libpq-dev
        - libxml2-dev
        - libxslt1-dev
        - build-essential
        - apache2
        - libapache2-mod-wsgi
        - nginx

    - name: make sure packages are installed (precise)
      action: apt pkg={{ item }} state=installed
      when: ansible_distribution_version == "12.04"
      with_items:
        - rubygems
        - ruby1.8-dev

    - name: make sure packages are installed (trusty)
      action: apt pkg={{ item }} state=installed
      when: ansible_distribution_version == "14.04"
      with_items:
        - rubygems-integration
        - ruby-dev

    - name: install fpm
      action: command gem install -v 0.4.21 fpm creates=/usr/local/bin/fpm

    - name: delete old directories
      action: file path={{ item }} state=absent
      with_items:
        - /etc/ckan
        - /usr/lib/ckan

    - name: get setupttols (I)
      action: get_url url=https://bootstrap.pypa.io/ez_setup.py dest=/tmp

    - name: get setupttols (II)
      action: command python /tmp/ez_setup.py

    - name: get pip (I)
      action: get_url url=https://bootstrap.pypa.io/get-pip.py dest=/tmp

    - name: get pip (II)
      action: command python /tmp/get-pip.py

    - name: install virtualenv
      action: pip name=virtualenv

    - name: pull ckan version
      action: git repo=https://github.com/ckan/ckan dest=/usr/lib/ckan/default/src/ckan version=ckan-{{ version }}

    - name: check requirements file name
      shell: "[ -f /usr/lib/ckan/default/src/ckan/pip-requirements.txt ] && echo 'pip-requirements.txt' || echo 'requirements.txt'"
      register: requirements_file_name

    - name: install requirements and make virtualenv for ckan
      action: pip requirements=/usr/lib/ckan/default/src/ckan/{{ requirements_file_name.stdout }} virtualenv=/usr/lib/ckan/default/

    - name: run setup.py develop for ckan
      action: command chdir=/usr/lib/ckan/default/src/ckan/ ../../bin/python setup.py develop

    - name: get ckan version
      command: /usr/lib/ckan/default/bin/python -c "import ckan; print ckan.__version__"
      register: ckan_version

    # if datapusher needs to be setup
    - name: pull datapusher version (ckan<2.3)
      action: git repo=https://github.com/ckan/datapusher dest=/usr/lib/ckan/datapusher/src/datapusher version=0.0.1.2
      when: datapusher == 'y' and ckan_version.stdout|version_compare('2.3', '<')

    - name: pull datapusher version (ckan>=2.3)
      action: git repo=https://github.com/ckan/datapusher dest=/usr/lib/ckan/datapusher/src/datapusher version=0.0.8
      when: datapusher == 'y' and ckan_version.stdout|version_compare('2.3', '>=')

    - name: install requirements and make virtualenv for datapusher
      action: pip requirements=/usr/lib/ckan/datapusher/src/datapusher/requirements.txt virtualenv=/usr/lib/ckan/datapusher/
      when: datapusher == 'y'

    - name: run setup.py develop for datapusher
      action: command chdir=/usr/lib/ckan/datapusher/src/datapusher/ ../../bin/python setup.py develop
      when: datapusher == 'y'

    - name: create directories
      action: file path={{ item }} state=directory
      with_items:
        - /etc/ckan/default
        - /var/www/build

    - name: copy all common needed files
      action: copy src=common/{{ item }} dest=/{{ item }}
      with_items:
        - etc/ckan/default/apache.wsgi
        - etc/nginx/sites-available/ckan
        - etc/cron.daily/remove_old_sessions

    - name: copy all distribution specific files
      action: copy src={{ ansible_distribution_release }}/{{ item }} dest=/{{ item }}
      with_items:
        - etc/apache2/sites-available/ckan_default.conf

    - name: copy source who.ini to configuration folder
      action: command cp /usr/lib/ckan/default/src/ckan/who.ini /etc/ckan/default/who.ini

    - name: copy executables
      action: copy src=common/{{ item }} dest=/{{ item }} mode=744
      with_items:
        - usr/bin/ckan

    - name: template the after web script
      action: template src=common/tmp/after_web.j2 dest=/tmp/after_web.sh mode=744

    - name: build deb main
      action: command chdir=/vagrant fpm
              -t deb -s dir
              --name python-ckan
              --description='CKAN is an open-source DMS (data management system) for powering data hubs and data portals.'
              --license='AGPL v3.0'
              --maintainer='CKAN team <ckan-dev@lists.okfn.org>'
              --vendor='CKAN Association'
              --url='http://ckan.org'
              --after-install=/tmp/after_web.sh
              --iteration {{ ansible_distribution_release }}{{ iteration }}
              --version {{ version }}
              --depends nginx --depends apache2 --depends libapache2-mod-wsgi --depends libpq5
              --config-files /etc/apache2/sites-available/ckan_default.conf --config-files /etc/nginx/sites-available/ckan --config-files /etc/ckan/default/who.ini
              /usr/lib/ckan/ /etc/ckan/ /usr/bin/ckan /etc/cron.daily/remove_old_sessions /etc/apache2/sites-available/ckan_default.conf /etc/nginx/sites-available/ckan
